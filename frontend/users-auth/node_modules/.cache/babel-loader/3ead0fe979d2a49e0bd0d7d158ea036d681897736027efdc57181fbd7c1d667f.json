{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTH0.8\\\\frontend\\\\users-auth\\\\src\\\\components\\\\Request.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Request() {\n  _s();\n  const [Myreq, setMyreq] = useState(fetchUsers);\n  let fet;\n  const fetchUsers = () => {\n    return axios.get('http://localhost:3001/register') // ให้ฟังก์ชัน fetchUsers() return Promise\n    .then(res => {\n      fetchUser = res.data; // กำหนดค่า fetchedData เท่ากับ res.data\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n      throw error; // ส่ง error ต่อไปเพื่อให้ catch ในฟังก์ชันที่เรียกใช้จัดการ\n    });\n  };\n  fetchUsers().then(() => {\n    console.log('Fetched data:', fetchUser); // แสดงผลข้อมูลที่ได้รับ\n    // ทำสิ่งอื่น ๆ ที่ต้องการกับข้อมูลที่ได้รับ\n  }).catch(error => {\n    console.error('Error:', error);\n    // ทำสิ่งที่ต้องการในกรณีที่เกิด error\n  });\n  console.log(\"==>\", Myreq);\n\n  //const username = localStorage.getItem('username')\n  //const usernameArray = response.data && response.data.map(data => data.username)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Request, \"EyYULxwHyTGrKAFfV19tq8jFilU=\");\n_c = Request;\nexport default Request;\nvar _c;\n$RefreshReg$(_c, \"Request\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Request","_s","Myreq","setMyreq","fetchUsers","fet","get","then","res","fetchUser","data","catch","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/AUTH0.8/frontend/users-auth/src/components/Request.js"],"sourcesContent":["import React,{ useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Request() {\r\n\r\n    const [Myreq, setMyreq] = useState(fetchUsers)\r\n    let fet\r\n    const fetchUsers  = () => {\r\n\r\n        return axios.get('http://localhost:3001/register') // ให้ฟังก์ชัน fetchUsers() return Promise\r\n        .then((res) => {\r\n            fetchUser = res.data; // กำหนดค่า fetchedData เท่ากับ res.data\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error fetching users:', error);\r\n            throw error; // ส่ง error ต่อไปเพื่อให้ catch ในฟังก์ชันที่เรียกใช้จัดการ\r\n        });\r\n    }\r\n    fetchUsers().then(() => {\r\n        console.log('Fetched data:', fetchUser); // แสดงผลข้อมูลที่ได้รับ\r\n        // ทำสิ่งอื่น ๆ ที่ต้องการกับข้อมูลที่ได้รับ\r\n    })\r\n    .catch((error) => {\r\n        console.error('Error:', error);\r\n        // ทำสิ่งที่ต้องการในกรณีที่เกิด error\r\n    });\r\n    console.log(\"==>\",Myreq)\r\n\r\n    //const username = localStorage.getItem('username')\r\n    //const usernameArray = response.data && response.data.map(data => data.username)\r\n    \r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\nexport default Request"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,UAAU,CAAC;EAC9C,IAAIC,GAAG;EACP,MAAMD,UAAU,GAAIA,CAAA,KAAM;IAEtB,OAAOP,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAAA,CAClDC,IAAI,CAAEC,GAAG,IAAK;MACXC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK,CAAC,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EACDR,UAAU,CAAC,CAAC,CAACG,IAAI,CAAC,MAAM;IACpBM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,SAAS,CAAC,CAAC,CAAC;IACzC;EACJ,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B;EACJ,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACZ,KAAK,CAAC;;EAExB;EACA;;EAGF,oBACEH,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEf;AAACjB,EAAA,CAhCQD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAkChB,eAAeA,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}