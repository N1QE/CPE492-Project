{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTH0.8\\\\frontend\\\\users-auth\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport boardsSlice, { fetchData } from \"../redux/boardsSlice\";\nimport Home from \"../components/Home\";\nimport Header from \"../components/Header\";\nimport EmptyBoard from '../components/EmptyBoard';\nimport store from '../redux/store';\nimport shareIcon from '../assets/shareicon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const [refreshCount, setRefreshCount] = useState(0);\n  const dispatch = useDispatch();\n  const [isShareBoardModalOpen, setisShareBoardModalOpen] = useState(second);\n  const boards = useSelector(state => {\n    return state.boards.boards;\n  });\n  useEffect(() => {\n    dispatch(fetchData());\n  }, []);\n  const activeBoard = boards && boards.find(board => board.isActive);\n  if (!activeBoard && boards && boards.length > 0) {\n    dispatch(boardsSlice.actions.setBoardActive({\n      index: 0\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" overflow-hidden  overflow-x-scroll\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: boards && boards.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Home, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed w-16 h-16 bottom-0 right-0 p-4 mr-10 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \" share\",\n            className: \" h-8 w-8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmptyBoard, {\n          type: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"+qB7fN+Aiq2mMQb1X2NUJJ0y5cw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","boardsSlice","fetchData","Home","Header","EmptyBoard","store","shareIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Account","_s","isBoardModalOpen","setIsBoardModalOpen","refreshCount","setRefreshCount","dispatch","isShareBoardModalOpen","setisShareBoardModalOpen","second","boards","state","activeBoard","find","board","isActive","length","actions","setBoardActive","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","_c","$RefreshReg$"],"sources":["C:/AUTH0.8/frontend/users-auth/src/pages/Account.js"],"sourcesContent":["import  React, { useState , useEffect} from 'react'\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport boardsSlice, {fetchData} from \"../redux/boardsSlice\"\r\nimport Home from \"../components/Home\";\r\nimport Header from \"../components/Header\";\r\nimport EmptyBoard from '../components/EmptyBoard';\r\nimport store from '../redux/store';\r\nimport shareIcon from '../assets/shareicon.png'\r\n\r\nfunction Account() {\r\n\r\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\r\n  const [refreshCount, setRefreshCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [isShareBoardModalOpen, setisShareBoardModalOpen] = useState(second)\r\n\r\n  const boards = useSelector((state) => {\r\n    return state.boards.boards\r\n  });\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n   dispatch(fetchData())\r\n   \r\n  \r\n  }, [])\r\n\r\n  const activeBoard = boards && boards.find((board) => board.isActive);\r\n  if(!activeBoard  && boards && boards.length > 0){\r\n    dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    <div className=\" overflow-hidden  overflow-x-scroll\">\r\n      <>\r\n        {boards && boards.length > 0 ?\r\n        <>\r\n          \r\n          <Header\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n          isBoardModalOpen={isBoardModalOpen}\r\n          />\r\n          <Home\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n          isBoardModalOpen={isBoardModalOpen}\r\n          />\r\n          <div className=\"fixed w-16 h-16 bottom-0 right-0 p-4 mr-10 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\">\r\n          <img src={shareIcon} alt=\" share\" className=\" h-8 w-8\" />\r\n          </div>\r\n        </>\r\n        :\r\n        <>\r\n          \r\n          <EmptyBoard type='add'/>\r\n        </>\r\n        }\r\n        \r\n      </>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Account"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}