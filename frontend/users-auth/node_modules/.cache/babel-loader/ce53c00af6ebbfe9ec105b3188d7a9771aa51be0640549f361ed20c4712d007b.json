{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTH0.8\\\\frontend\\\\users-auth\\\\src\\\\components\\\\Column.js\",\n  _s = $RefreshSig$();\nimport { shuffle } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport boardsSlice, { fetchData } from \"../redux/boardsSlice\";\nimport Task from \"./Task\";\nimport { updateData } from \"../redux/boardsSlice\";\nimport store from '../redux/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Column({\n  colIndex\n}) {\n  _s();\n  const colors = [\"bg-red-500\", \"bg-orange-500\", \"bg-blue-500\", \"bg-purple-500\", \"bg-green-500\", \"bg-indigo-500\", \"bg-yellow-500\", \"bg-pink-500\", \"bg-sky-500\"];\n  const dispatch = useDispatch();\n  const [color, setColor] = useState(null);\n  const boards = useSelector(state => {\n    //ใช้ useSelector เพื่อดึงข้อมูลจาก redux store\n    return state.boards.boards;\n  });\n  const board = boards && boards.find(board => board.isActive === true); //กำหนดค่าให้ตัวแปรโดยใช้ method find\n  const col = board.columns.find((col, i) => i === colIndex);\n  useEffect(() => {\n    setColor(shuffle(colors).pop());\n  }, [dispatch]); //useDispatch ส่ง action เพื่อเปลี่ยนแปลง state ใน Redux store \n\n  function areAllTasksCompleted(tasks) {\n    return tasks.every(task => task.isCompleted);\n  }\n  const handleOnDrop = e => {\n    //e อ็อบเจกต์ Event ที่ถูกส่งเข้ามา\n\n    const {\n      prevColIndex,\n      taskIndex\n    } = JSON.parse(\n    //ใช้แปลง JSON string ที่ได้มาเป็น Object\n    e.dataTransfer.getData(\"text\") //ใช้เพื่อดึงข้อมูลที่ถูกลากมาจากการ Drag and Drop\n    );\n    if (colIndex !== prevColIndex) {\n      //ตรวจสอบเงื่อนไข\n      dispatch(boardsSlice.actions.dragTask({\n        colIndex,\n        prevColIndex,\n        taskIndex\n      }) //ทำการ dispatch\n      );\n      const updateBoards = store.getState().boards.boards;\n      dispatch(updateData(updateBoards));\n    }\n  };\n  const handleOnDragOver = e => {\n    //e object event\n    e.preventDefault(); //ใช้เพื่อป้องกันการกระทำที่เป็นค่าเริ่มต้นของเบราว์เซอร์\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDrop: handleOnDrop,\n    onDragOver: handleOnDragOver,\n    className: \"scrollbar-hide   mx-5 pt-[90px] min-w-[280px] \",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \" font-semibold flex  items-center  gap-2 tracking-widest md:tracking-[.2em] text-[#828fa3]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-full w-4 h-4 ${color} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), col.name, \" (\", col.tasks.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), col.tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      taskIndex: index,\n      colIndex: colIndex\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Column, \"16nXQgZ29GI2/MuVTIK8CcjfQlI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["shuffle","React","useEffect","useState","useDispatch","useSelector","boardsSlice","fetchData","Task","updateData","store","jsxDEV","_jsxDEV","Column","colIndex","_s","colors","dispatch","color","setColor","boards","state","board","find","isActive","col","columns","i","pop","areAllTasksCompleted","tasks","every","task","isCompleted","handleOnDrop","e","prevColIndex","taskIndex","JSON","parse","dataTransfer","getData","actions","dragTask","updateBoards","getState","handleOnDragOver","preventDefault","onDrop","onDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","index","_c","$RefreshReg$"],"sources":["C:/AUTH0.8/frontend/users-auth/src/components/Column.js"],"sourcesContent":["import { shuffle } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport boardsSlice, { fetchData } from \"../redux/boardsSlice\";\nimport Task from \"./Task\";\nimport { updateData } from \"../redux/boardsSlice\";\nimport store from '../redux/store';\n\nfunction Column({ colIndex }) {\n\n  const colors = [\n    \"bg-red-500\",\n    \"bg-orange-500\",\n    \"bg-blue-500\",\n    \"bg-purple-500\",\n    \"bg-green-500\",\n    \"bg-indigo-500\",\n    \"bg-yellow-500\",\n    \"bg-pink-500\",\n    \"bg-sky-500\",\n  ]; \n\n  const dispatch = useDispatch(); \n  const [color, setColor] = useState(null)\n  const boards = useSelector((state) => { //ใช้ useSelector เพื่อดึงข้อมูลจาก redux store\n    return state.boards.boards\n  });\n  const board = boards && boards.find((board) => board.isActive === true); //กำหนดค่าให้ตัวแปรโดยใช้ method find\n  const col = board.columns.find((col, i) => i === colIndex);\n  useEffect(() => {\n    setColor(shuffle(colors).pop())\n  }, [dispatch]); //useDispatch ส่ง action เพื่อเปลี่ยนแปลง state ใน Redux store \n\n  function areAllTasksCompleted(tasks) {\n    return tasks.every(task => task.isCompleted);\n  }\n\n  const handleOnDrop = (e) => { //e อ็อบเจกต์ Event ที่ถูกส่งเข้ามา\n\n\n\n    const { prevColIndex , taskIndex } = JSON.parse( //ใช้แปลง JSON string ที่ได้มาเป็น Object\n      e.dataTransfer.getData(\"text\") //ใช้เพื่อดึงข้อมูลที่ถูกลากมาจากการ Drag and Drop\n    );\n\n    if (colIndex !== prevColIndex) { //ตรวจสอบเงื่อนไข\n      dispatch(\n        boardsSlice.actions.dragTask({ colIndex, prevColIndex, taskIndex }) //ทำการ dispatch\n      );\n      const updateBoards = store.getState().boards.boards;\n      dispatch(updateData(updateBoards));\n    }\n  };\n\n  const handleOnDragOver = (e) => { //e object event\n    e.preventDefault(); //ใช้เพื่อป้องกันการกระทำที่เป็นค่าเริ่มต้นของเบราว์เซอร์\n  };\n\n  return (\n    <div\n      onDrop={handleOnDrop}\n      onDragOver={handleOnDragOver}\n      className=\"scrollbar-hide   mx-5 pt-[90px] min-w-[280px] \"\n    >\n      <p className=\" font-semibold flex  items-center  gap-2 tracking-widest md:tracking-[.2em] text-[#828fa3]\">\n        <div className={`rounded-full w-4 h-4 ${color} `} />\n        {col.name} ({col.tasks.length})\n      </p>\n\n      {col.tasks.map((task, index) => (\n        <Task key={index} taskIndex={index} colIndex={colIndex} />\n      ))}\n    </div>\n  );\n}\n\nexport default Column;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}