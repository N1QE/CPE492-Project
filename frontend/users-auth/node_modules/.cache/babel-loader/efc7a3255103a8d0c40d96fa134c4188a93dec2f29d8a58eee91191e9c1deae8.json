{"ast":null,"code":"var _jsxFileName = \"C:\\\\AUTH0.8\\\\frontend\\\\users-auth\\\\src\\\\pages\\\\Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport boardsSlice, { fetchData } from \"../redux/boardsSlice\";\nimport Home from \"../components/Home\";\nimport Header from \"../components/Header\";\nimport EmptyBoard from '../components/EmptyBoard';\nimport store from '../redux/store';\nimport shareIcon from '../assets/shareicon.png';\nimport ShareBoardModal from '../modals/ShareBoardModal';\nimport letterIcon from '../assets/lettericon.png';\nimport RequestModal from '../modals/RequestModal';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Account() {\n  _s();\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [isShareBoardModalOpen, setIsShareBoardModalOpen] = useState(false);\n  const [isRequestModalOpen, setIsRequestModalOpen] = useState(false);\n  const boards = useSelector(state => {\n    return state.boards.boards;\n  });\n  const setOpenShareBoardModal = () => {\n    setIsShareBoardModalOpen(true);\n    console.log(\"Open\");\n  };\n  const setOpenRequestModal = async () => {\n    setIsRequestModalOpen(true);\n    try {\n      const response = await axios.get('http://localhost:3001/register');\n      local;\n      console.log(response.data);\n      // if (usernameArray.includes(username)) {\n      //     const updateBoards = store.getState().boards.boards;\n      //     const updateboard = updateBoards && updateBoards.find((board) => board.isActive);\n      //     const sender = localStorage.getItem('username')\n      //     const _id = updateboard._id\n      //     const boardname = updateboard.name\n      //     console.log(\"sender===>\",sender)\n      //     console.log(\"boardname===>\",boardname)\n      //     console.log(\"_id===>\",_id)\n      //     console.log(\"username==>\",username)\n      //     axios.post('http://localhost:3001/request',{_id,username,boardname,sender})\n      //     setIsShareBoardModalOpen(false);\n      // } else {\n      //     console.log(\"N\");\n      // }\n    } catch (error) {\n      console.log('Login Error');\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchData());\n  }, []);\n  const activeBoard = boards && boards.find(board => board.isActive);\n  if (!activeBoard && boards && boards.length > 0) {\n    dispatch(boardsSlice.actions.setBoardActive({\n      index: 0\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" overflow-hidden  overflow-x-scroll\",\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: boards && boards.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Home, {\n          setIsBoardModalOpen: setIsBoardModalOpen,\n          isBoardModalOpen: isBoardModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed w-16 h-16 bottom-0 right-0 p-4 mr-10 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\",\n          onClick: setOpenShareBoardModal,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareIcon,\n            alt: \" share\",\n            className: \" h-8 w-8 cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed w-16 h-16 bottom-0 right-0 p-4 mr-32 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\",\n          onClick: setOpenRequestModal,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: letterIcon,\n            alt: \" share\",\n            className: \" h-8 w-8 cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(EmptyBoard, {\n          type: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false), isShareBoardModalOpen && /*#__PURE__*/_jsxDEV(ShareBoardModal, {\n      setIsShareBoardModalOpen: setIsShareBoardModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 36\n    }, this), isRequestModalOpen && /*#__PURE__*/_jsxDEV(RequestModal, {\n      setIsRequestModalOpen: setIsRequestModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Account, \"rLTkhxQmvwYFUKlTpoP8OXtg45M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Account;\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","boardsSlice","fetchData","Home","Header","EmptyBoard","store","shareIcon","ShareBoardModal","letterIcon","RequestModal","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Account","_s","isBoardModalOpen","setIsBoardModalOpen","dispatch","isShareBoardModalOpen","setIsShareBoardModalOpen","isRequestModalOpen","setIsRequestModalOpen","boards","state","setOpenShareBoardModal","console","log","setOpenRequestModal","response","get","local","data","error","activeBoard","find","board","isActive","length","actions","setBoardActive","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","type","_c","$RefreshReg$"],"sources":["C:/AUTH0.8/frontend/users-auth/src/pages/Account.js"],"sourcesContent":["import  React, { useState , useEffect} from 'react'\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport boardsSlice, {fetchData} from \"../redux/boardsSlice\"\r\nimport Home from \"../components/Home\";\r\nimport Header from \"../components/Header\";\r\nimport EmptyBoard from '../components/EmptyBoard';\r\nimport store from '../redux/store';\r\nimport shareIcon from '../assets/shareicon.png'\r\nimport ShareBoardModal from '../modals/ShareBoardModal';\r\nimport letterIcon from '../assets/lettericon.png'\r\nimport RequestModal from '../modals/RequestModal';\r\nimport axios from 'axios';\r\n\r\nfunction Account() {\r\n\r\n  const [isBoardModalOpen, setIsBoardModalOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [isShareBoardModalOpen, setIsShareBoardModalOpen] = useState(false)\r\n  const [isRequestModalOpen, setIsRequestModalOpen] = useState(false)\r\n\r\n  const boards = useSelector((state) => {\r\n    return state.boards.boards\r\n  });\r\n  \r\n  const setOpenShareBoardModal = () => {\r\n    setIsShareBoardModalOpen(true);\r\n    console.log(\"Open\")\r\n  };\r\n  \r\n  const setOpenRequestModal = async () => {\r\n    setIsRequestModalOpen(true);\r\n    try{\r\n            \r\n      const response = await axios.get('http://localhost:3001/register')\r\n      local\r\n      console.log(response.data)\r\n      // if (usernameArray.includes(username)) {\r\n      //     const updateBoards = store.getState().boards.boards;\r\n      //     const updateboard = updateBoards && updateBoards.find((board) => board.isActive);\r\n      //     const sender = localStorage.getItem('username')\r\n      //     const _id = updateboard._id\r\n      //     const boardname = updateboard.name\r\n      //     console.log(\"sender===>\",sender)\r\n      //     console.log(\"boardname===>\",boardname)\r\n      //     console.log(\"_id===>\",_id)\r\n      //     console.log(\"username==>\",username)\r\n      //     axios.post('http://localhost:3001/request',{_id,username,boardname,sender})\r\n      //     setIsShareBoardModalOpen(false);\r\n      // } else {\r\n      //     console.log(\"N\");\r\n      // }\r\n\r\n      \r\n  }catch (error) {\r\n      console.log('Login Error')\r\n  }\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n   dispatch(fetchData())\r\n  }, [])\r\n\r\n  const activeBoard = boards && boards.find((board) => board.isActive);\r\n  if(!activeBoard  && boards && boards.length > 0){\r\n    dispatch(boardsSlice.actions.setBoardActive({ index: 0 }));\r\n  }\r\n\r\n  \r\n  return (\r\n\r\n    <div className=\" overflow-hidden  overflow-x-scroll\">\r\n      <>\r\n        {boards && boards.length > 0 ?\r\n        <>\r\n          \r\n          <Header\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n          isBoardModalOpen={isBoardModalOpen}\r\n          />\r\n          <Home\r\n          setIsBoardModalOpen={setIsBoardModalOpen}\r\n          isBoardModalOpen={isBoardModalOpen}\r\n          />\r\n          <div className=\"fixed w-16 h-16 bottom-0 right-0 p-4 mr-10 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\"\r\n          onClick={setOpenShareBoardModal}>\r\n          <img src={shareIcon} alt=\" share\" className=\" h-8 w-8 cursor-pointer\" />\r\n          </div>\r\n          <div className=\"fixed w-16 h-16 bottom-0 right-0 p-4 mr-32 mb-10 rounded-full shadow-[#364e7e1a] bg-[#635fc7]\"\r\n          onClick={setOpenRequestModal}>\r\n          <img src={letterIcon} alt=\" share\" className=\" h-8 w-8 cursor-pointer\" />\r\n          </div>\r\n        </>\r\n        :\r\n        <>\r\n          \r\n          <EmptyBoard type='add'/>\r\n        </>\r\n        }\r\n      </>\r\n      { isShareBoardModalOpen && ( <ShareBoardModal\r\n      setIsShareBoardModalOpen={setIsShareBoardModalOpen}/>)}\r\n      { isRequestModalOpen && ( <RequestModal\r\n      setIsRequestModalOpen={setIsRequestModalOpen}/>)}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Account"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}